#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.42000
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EasyRoute
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
    using System.Configuration;

    [global::System.Data.Linq.Mapping.DatabaseAttribute(Name="EasyRouteDB")]
	public partial class EasyRouteDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertContato(Contato instance);
    partial void UpdateContato(Contato instance);
    partial void DeleteContato(Contato instance);
    partial void InsertEndereco(Endereco instance);
    partial void UpdateEndereco(Endereco instance);
    partial void DeleteEndereco(Endereco instance);
    #endregion
		
		public EasyRouteDataContext() : 
				base(ConfigurationManager.ConnectionStrings["EasyRouteDBConnectionString"].ConnectionString)
		{
			OnCreated();
		}
		
		public EasyRouteDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EasyRouteDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EasyRouteDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Contato> Contato
		{
			get
			{
				return this.GetTable<Contato>();
			}
		}
		
		public System.Data.Linq.Table<Endereco> Endereco
		{
			get
			{
				return this.GetTable<Endereco>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Contato")]
	public partial class Contato : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Nome;
		
		private string _Telefone;
		
		private string _Cpf;
		
		private string _Email;
		
		private bool _Status;
		
		private EntitySet<Endereco> _Endereco;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnTelefoneChanging(string value);
    partial void OnTelefoneChanged();
    partial void OnCpfChanging(string value);
    partial void OnCpfChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnStatusChanging(bool value);
    partial void OnStatusChanged();
    #endregion
		
		public Contato()
		{
			this._Endereco = new EntitySet<Endereco>(new Action<Endereco>(this.attach_Endereco), new Action<Endereco>(this.detach_Endereco));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefone", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string Telefone
		{
			get
			{
				return this._Telefone;
			}
			set
			{
				if ((this._Telefone != value))
				{
					this.OnTelefoneChanging(value);
					this.SendPropertyChanging();
					this._Telefone = value;
					this.SendPropertyChanged("Telefone");
					this.OnTelefoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cpf", DbType="VarChar(14) NOT NULL", CanBeNull=false)]
		public string Cpf
		{
			get
			{
				return this._Cpf;
			}
			set
			{
				if ((this._Cpf != value))
				{
					this.OnCpfChanging(value);
					this.SendPropertyChanging();
					this._Cpf = value;
					this.SendPropertyChanged("Cpf");
					this.OnCpfChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit NOT NULL")]
		public bool Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contato_Endereco", Storage="_Endereco", ThisKey="Id", OtherKey="ContatoId")]
		public EntitySet<Endereco> Endereco
		{
			get
			{
				return this._Endereco;
			}
			set
			{
				this._Endereco.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Endereco(Endereco entity)
		{
			this.SendPropertyChanging();
			entity.Contato = this;
		}
		
		private void detach_Endereco(Endereco entity)
		{
			this.SendPropertyChanging();
			entity.Contato = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Endereco")]
	public partial class Endereco : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Logradouro;
		
		private string _Numero;
		
		private string _Bairro;
		
		private string _Complemento;
		
		private string _Cep;
		
		private string _Cidade;
		
		private string _Estado;
		
		private bool _Status;
		
		private int _ContatoId;
		
		private EntityRef<Contato> _Contato;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLogradouroChanging(string value);
    partial void OnLogradouroChanged();
    partial void OnNumeroChanging(string value);
    partial void OnNumeroChanged();
    partial void OnBairroChanging(string value);
    partial void OnBairroChanged();
    partial void OnComplementoChanging(string value);
    partial void OnComplementoChanged();
    partial void OnCepChanging(string value);
    partial void OnCepChanged();
    partial void OnCidadeChanging(string value);
    partial void OnCidadeChanged();
    partial void OnEstadoChanging(string value);
    partial void OnEstadoChanged();
    partial void OnStatusChanging(bool value);
    partial void OnStatusChanged();
    partial void OnContatoIdChanging(int value);
    partial void OnContatoIdChanged();
    #endregion
		
		public Endereco()
		{
			this._Contato = default(EntityRef<Contato>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Logradouro", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Logradouro
		{
			get
			{
				return this._Logradouro;
			}
			set
			{
				if ((this._Logradouro != value))
				{
					this.OnLogradouroChanging(value);
					this.SendPropertyChanging();
					this._Logradouro = value;
					this.SendPropertyChanged("Logradouro");
					this.OnLogradouroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Numero", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string Numero
		{
			get
			{
				return this._Numero;
			}
			set
			{
				if ((this._Numero != value))
				{
					this.OnNumeroChanging(value);
					this.SendPropertyChanging();
					this._Numero = value;
					this.SendPropertyChanged("Numero");
					this.OnNumeroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bairro", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
		public string Bairro
		{
			get
			{
				return this._Bairro;
			}
			set
			{
				if ((this._Bairro != value))
				{
					this.OnBairroChanging(value);
					this.SendPropertyChanging();
					this._Bairro = value;
					this.SendPropertyChanged("Bairro");
					this.OnBairroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Complemento", DbType="VarChar(100)")]
		public string Complemento
		{
			get
			{
				return this._Complemento;
			}
			set
			{
				if ((this._Complemento != value))
				{
					this.OnComplementoChanging(value);
					this.SendPropertyChanging();
					this._Complemento = value;
					this.SendPropertyChanged("Complemento");
					this.OnComplementoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cep", DbType="VarChar(9) NOT NULL", CanBeNull=false)]
		public string Cep
		{
			get
			{
				return this._Cep;
			}
			set
			{
				if ((this._Cep != value))
				{
					this.OnCepChanging(value);
					this.SendPropertyChanging();
					this._Cep = value;
					this.SendPropertyChanged("Cep");
					this.OnCepChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cidade", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
		public string Cidade
		{
			get
			{
				return this._Cidade;
			}
			set
			{
				if ((this._Cidade != value))
				{
					this.OnCidadeChanging(value);
					this.SendPropertyChanging();
					this._Cidade = value;
					this.SendPropertyChanged("Cidade");
					this.OnCidadeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="Char(2) NOT NULL", CanBeNull=false)]
		public string Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit NOT NULL")]
		public bool Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContatoId", DbType="Int NOT NULL")]
		public int ContatoId
		{
			get
			{
				return this._ContatoId;
			}
			set
			{
				if ((this._ContatoId != value))
				{
					if (this._Contato.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContatoIdChanging(value);
					this.SendPropertyChanging();
					this._ContatoId = value;
					this.SendPropertyChanged("ContatoId");
					this.OnContatoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contato_Endereco", Storage="_Contato", ThisKey="ContatoId", OtherKey="Id", IsForeignKey=true)]
		public Contato Contato
		{
			get
			{
				return this._Contato.Entity;
			}
			set
			{
				Contato previousValue = this._Contato.Entity;
				if (((previousValue != value) 
							|| (this._Contato.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Contato.Entity = null;
						previousValue.Endereco.Remove(this);
					}
					this._Contato.Entity = value;
					if ((value != null))
					{
						value.Endereco.Add(this);
						this._ContatoId = value.Id;
					}
					else
					{
						this._ContatoId = default(int);
					}
					this.SendPropertyChanged("Contato");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
